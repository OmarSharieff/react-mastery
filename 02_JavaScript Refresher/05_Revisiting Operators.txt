Here’s a quick refresher on JavaScript operators, grouped by type:

1. Arithmetic Operators
    Used for basic math operations:
    + (Addition): 5 + 3 // 8
    - (Subtraction): 5 - 3 // 2
    * (Multiplication): 5 * 3 // 15
    / (Division): 5 / 2 // 2.5
    % (Modulus): 5 % 2 // 1 (Remainder)
    ** (Exponentiation): 5 ** 2 // 25 (Power)

2. Assignment Operators
    Used to assign or update values:
    =: Assign a value: let x = 5
    +=: Add and assign: x += 2 // x = x + 2
    -=: Subtract and assign: x -= 2
    *=: Multiply and assign: x *= 2
    /=: Divide and assign: x /= 2
    %=: Modulus and assign: x %= 2

3. Comparison Operators
Used to compare values (returns true or false):
    ==: Equal to (loose): 5 == "5" // true
    ===: Equal to (strict): 5 === "5" // false
    !=: Not equal (loose): 5 != "5" // false
    !==: Not equal (strict): 5 !== "5" // true
    <: Less than: 5 < 3 // false
    >: Greater than: 5 > 3 // true
    <=: Less than or equal: 5 <= 5 // true
    >=: Greater than or equal: 5 >= 3 // true

4. Logical Operators
Used for logical expressions:
    && (AND): true && false // false
    || (OR): true || false // true
    ! (NOT): !true // false

5. Bitwise Operators
Used for binary operations:
    & (AND), | (OR), ^ (XOR), ~ (NOT), << (Left Shift), >> (Right Shift).

6. String Operators
Concatenation: +
"Hello" + " " + "World" // "Hello World"


Here’s a quick refresher on JavaScript operators, grouped by type:

1. Arithmetic Operators
Used for basic math operations:
+ (Addition): 5 + 3 // 8
- (Subtraction): 5 - 3 // 2
* (Multiplication): 5 * 3 // 15
/ (Division): 5 / 2 // 2.5
% (Modulus): 5 % 2 // 1 (Remainder)
** (Exponentiation): 5 ** 2 // 25 (Power)

2. Assignment Operators
Used to assign or update values:
=: Assign a value: let x = 5
+=: Add and assign: x += 2 // x = x + 2
-=: Subtract and assign: x -= 2
*=: Multiply and assign: x *= 2
/=: Divide and assign: x /= 2
%=: Modulus and assign: x %= 2

3. Comparison Operators
Used to compare values (returns true or false):
==: Equal to (loose): 5 == "5" // true
===: Equal to (strict): 5 === "5" // false
!=: Not equal (loose): 5 != "5" // false
!==: Not equal (strict): 5 !== "5" // true
<: Less than: 5 < 3 // false
>: Greater than: 5 > 3 // true
<=: Less than or equal: 5 <= 5 // true
>=: Greater than or equal: 5 >= 3 // true

4. Logical Operators
Used for logical expressions:
&& (AND): true && false // false
|| (OR): true || false // true
! (NOT): !true // false

5. Bitwise Operators
Used for binary operations:
& (AND), | (OR), ^ (XOR), ~ (NOT), << (Left Shift), >> (Right Shift).

6. String Operators
Concatenation: +
"Hello" + " " + "World" // "Hello World"

7. Ternary Operator
A shorthand for if...else:
let age = 18;
let result = (age >= 18) ? "Adult" : "Minor"; // "Adult"

8. Type Operators
typeof: Check the data type: typeof 42 // "number"
instanceof: Check if an object belongs to a class:
let arr = [];
arr instanceof Array // true

9. Nullish Coalescing Operator (??)
Returns the right-hand side if the left-hand side is null or undefined:
let name = null;
console.log(name ?? "Default Name"); // "Default Name"

